[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HOME",
    "section": "",
    "text": "1 Introduction\n\nDefinition of Automation\nProcess Control\nTypes of different Industrial Processes\n\n\n\n2 Pneumatic and Electro-pneumatic Automatization\n\nElements of a neumatic circuit\nElements of a electic circuit, electrical acutators and control elements\nAutomatization of neumatic and electroneumatic sequences\n\n\n\n3 Programable Logical Control (PLC)\n\nLogical Operations with ladder diagram\nInput and output variables, internal registers of PLC\nDifferent componentens and instructions of PLC programation\n\n\n\n4 GRAFCET - Funcional Graph of Stage-Transition Control\n\nStages and transition conditions\nRules to develope a GRAFCET\nTransformation of a GRAFCET into a ladder diagram lenguaje Ladder\n\n\n\n5 State flow\n\nIntroduction to state flow in Matlab\nStates and transitions\nControl a simulation enviroment with state flow\nControl a plant with state flow\n\n\n\n6 Industrial Robots (optional)\n\nIntroductions to industrial robots\nSecurity topics for usage of industrial robots",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter00.html",
    "href": "chapter00.html",
    "title": "2  About the Lecture",
    "section": "",
    "text": "2.1 General Information about the lecture",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#general-information-about-the-lecture",
    "href": "chapter00.html#general-information-about-the-lecture",
    "title": "2  About the Lecture",
    "section": "",
    "text": "2.1.1 Schedules\n\nTheory: Mon / Wed, 12:30-14:00 hrs\nLaboratory:\n\nG001 Fri 11:00-14:00 hrs\nG002 Fri 16:00-19:00 hrs\n\n\n\n\n2.1.2 Lecturers\n\nProf. Thomas M. Rudolf (theory)\nProf. Claudia Victoria Olivar Jiménez (laboratory)\n\n\n\n2.1.3 Location\n\nAula LMINT",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#description-and-objetives",
    "href": "chapter00.html#description-and-objetives",
    "title": "2  About the Lecture",
    "section": "2.2 Description and Objetives",
    "text": "2.2 Description and Objetives\n\nAddress concepts related to Industrial Automation systems.\nControl methods applied mainly to sequential processes and the theory related to Grafcet will also be studied.\nApplication of emerging technologies to automate industrial processes. The structure and programming logic for Programmable Logic Controllers (PLC) will be studied.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#what-is-covered-in-this-lecture",
    "href": "chapter00.html#what-is-covered-in-this-lecture",
    "title": "2  About the Lecture",
    "section": "2.3 What is covered in this lecture:",
    "text": "2.3 What is covered in this lecture:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#what-is-not-covered-in-this-lecture",
    "href": "chapter00.html#what-is-not-covered-in-this-lecture",
    "title": "2  About the Lecture",
    "section": "2.4 What is not covered in this lecture:",
    "text": "2.4 What is not covered in this lecture:\n\nIt is not a lectur about pneumatics nor hydraulics.\nIt is not a fluid dynamics lecture.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#evaluation",
    "href": "chapter00.html#evaluation",
    "title": "2  About the Lecture",
    "section": "2.5 Evaluation",
    "text": "2.5 Evaluation\n\n\n\n\n\n\n\nType\npercentage\n\n\n\n\n2 Parcials:\n\n1st partial: 30/09/2024 or 02/10/2024 (1 hr, 20 min)\n2nd partial: 04/11/2024 or 06/11/2024 (1 hr, 20 min)\n\n25 % each\n\n\nFinal Project (Exam final: tbd (LMINT))\n30%\n\n\nLaboratory\n20%",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#course-rules",
    "href": "chapter00.html#course-rules",
    "title": "2  About the Lecture",
    "section": "2.6 Course rules",
    "text": "2.6 Course rules\n\nMaximum 10 minutes delay.\nNO re-examinations.\nSanction for plagiarism according to the regulations\nFood is not allowed in the lab",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter00.html#topics",
    "href": "chapter00.html#topics",
    "title": "2  About the Lecture",
    "section": "2.7 Topics",
    "text": "2.7 Topics\n\nIntroduction to automation\nPneumatic and Electro-pneumatic Automatization\nPLC programmable controllers\nGrafcet\nState Flow\nIndustrial Robots (optional)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About the Lecture</span>"
    ]
  },
  {
    "objectID": "chapter01.html",
    "href": "chapter01.html",
    "title": "3  Introduction to Automation and Process Control",
    "section": "",
    "text": "3.1 Definition of Automation\nReplacement of the human operator by an artificial operator, in the execution of a previously programmed physical or mental task. One has to control the system in order to automate it.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#types-of-control-schemes",
    "href": "chapter01.html#types-of-control-schemes",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.2 Types of control schemes",
    "text": "3.2 Types of control schemes\nThere are basically two types of control: Open Loop and Closed Loop\nThe open loop has the following structure. It receives a command or reference signal. The controller calculates an input signal for the actuator. The output of the actuator starts manipulating the system. Since the controller does not receives any feedback on how the systems reacts on the command the results might be different from the desired behaviour. Examples for the application of open loop control are: A tennis player who hits the ball, if you turn on a light in you room or a DC motor without sensors.\n\n\n\nfig. 1.1: general structure of a open loop control\n\n\nTo improve the resulting behaviour and be able to correct possible differences between the commad value and the resulting value, one can implement sensors that observe the resulting behaviour of the systems or process. This sensors return the current behaviour to the controller and the controller can correct the input signal to the actuator. The following figure shows the general structure of a close loop control.\n\n\n\nfig. 1.2: general structure of a close loop control",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#industrial-process",
    "href": "chapter01.html#industrial-process",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.3 Industrial Process",
    "text": "3.3 Industrial Process\nAn industrial Process is a set of actions for transporting and transforming raw materials to obtain a final product.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#types-of-industrial-processes",
    "href": "chapter01.html#types-of-industrial-processes",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.4 Types of Industrial Processes",
    "text": "3.4 Types of Industrial Processes\nThere are different types of proceses within industrial processes: Continuous Processes, Discrete and Processes Non-continouse Processes by batches. Each type will be explained shortly.\n\n3.4.1 Continuous Processes:\n\nUninterrupted process over time in which analog variables (temperature, speed, etc.) are manipulated.\nProcess in which raw materials are constantly entering at one end of the system, while at the other end a finished product is continuously obtained.\n\nExample: Heating System Someone defines the requiered temperature in the room. The input value can be done by different types of devices, digital or analogue inputs, for example. At the same time, the current room temperature is measured and compared to the reference. The difference between these two values are the input to the controller and the controller calculates the new opening value for a valve that opens the gas flow to the burner. The room gets warmer (or not) and a new temparature is measured. This new temparature value is then compared again to the reference value.\n\n\n\nfig. 1.3 Heating System\n\n\n\n\n\nfig. 1.4 representation of a heating System in blocks\n\n\n\n\n3.4.2 Discrete Processes\n\nProcesses that involve variables that can take a finite number of possible values or states.\nProcesses in which the output product is obtained through a series of operations.\n\nExample: Production of metalic pieces\nSteps:\n\nCut the piece\nTransport the piece\nDrilling A\nDrilling B\nTake the piece out\n\n\n\n\nfig. 1.5 example of the production of a metalic product",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#non-continuous-processes-by-batches",
    "href": "chapter01.html#non-continuous-processes-by-batches",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.5 Non-continuous Processes by batches",
    "text": "3.5 Non-continuous Processes by batches\nProcesses where the final product is made up of different components.\nSteps:\n\nPosition pieces C, D and E\nPosition piece B\nPosition piece A\nReturn cylinders pieces C, D and E\n\n\n\n\nfig. 1.6 Assembly process\n\n\nBox Stacker:\n\n\n\nfig. 1.7 process of box positioning for further transport.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#resume-types-of-processes-and-types-of-control",
    "href": "chapter01.html#resume-types-of-processes-and-types-of-control",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.6 Resume: Types of processes and types of control",
    "text": "3.6 Resume: Types of processes and types of control\n\n\n\nfig. 1.8 resume of processes and control types",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter01.html#industrial-automation",
    "href": "chapter01.html#industrial-automation",
    "title": "3  Introduction to Automation and Process Control",
    "section": "3.7 Industrial Automation",
    "text": "3.7 Industrial Automation\nTotal (or partial) elimination of human intervention in manufacturing processes, carrying out calculation and decision functions.\nTypical examples with pneumatic application can be found in the food and drug industry (example) or in the textil industry (example).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Introduction to Automation and Process Control</span>"
    ]
  },
  {
    "objectID": "chapter02.html",
    "href": "chapter02.html",
    "title": "4  Elements of a pneumatic circuit",
    "section": "",
    "text": "4.0.0.1 Why compressed air?\nThe word ‘Pneumatics’ is derived from the Greek ‘neuma’ (air or breath). Originally, the term pneumatics designated the science of the movement and properties of air. This is the branch of engineering that deals with the study and application of compressed air, its generation, transmission and control.\nThe design of devices that used air energy dates back to the 18th century (with the pneumatic rifle). “Modern” devices: pneumatic rock drill, pneumatic brakes. “Modern” pneumatics was born in the 1950s, when techniques and forms of air energy control were introduced in industrial processes.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Elements of a pneumatic circuit</span>"
    ]
  },
  {
    "objectID": "chapter02.html#elements-of-a-electic-circuit-electrical-acutators-and-control-elements",
    "href": "chapter02.html#elements-of-a-electic-circuit-electrical-acutators-and-control-elements",
    "title": "4  Elements of a pneumatic circuit",
    "section": "4.1 Elements of a electic circuit, electrical acutators and control elements",
    "text": "4.1 Elements of a electic circuit, electrical acutators and control elements",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Elements of a pneumatic circuit</span>"
    ]
  },
  {
    "objectID": "chapter02.html#automatization-of-pneumatic-and-electro-pneumatic-sequences",
    "href": "chapter02.html#automatization-of-pneumatic-and-electro-pneumatic-sequences",
    "title": "4  Elements of a pneumatic circuit",
    "section": "4.2 Automatization of pneumatic and electro-pneumatic sequences",
    "text": "4.2 Automatization of pneumatic and electro-pneumatic sequences",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Elements of a pneumatic circuit</span>"
    ]
  },
  {
    "objectID": "chapter03.html",
    "href": "chapter03.html",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "",
    "text": "5.1 Introduction to PLCs\nA Programmable Logic Controller (PLC) is a specialized microprocessor-based controller designed for industrial automation. It stores programmed instructions to execute logical, arithmetic, and sequential functions. Unlike general-purpose computers, PLCs are optimized for real-time control tasks and operate reliably in harsh environments.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#introduction-to-plcs",
    "href": "chapter03.html#introduction-to-plcs",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "",
    "text": "5.1.1 What is a PLC?\nA PLC (Programmable Logic Controller) is a ruggedized digital computer used to control industrial processes, machines, and automation systems.\nIt is designed to reliably operate in harsh environments (temperature, vibration, electrical noise).\nA typical PLC consists of:\n\nCPU (logic execution, program memory, communication handling)\nI/O modules (digital & analog, to connect sensors and actuators)\nPower supply\nProgramming environment\nNetwork interfaces (Ethernet/IP, Profinet, etc.)\nDiagnostics tools\n\n\n\n\n\n\n\n\n\nFeature\nImportance / Advantage\nChallenges\n\n\n\n\nModularity & Scalability\nEasy to expand with more I/O, CPUs, or communication modules → adaptable for small and large systems.\nCompatibility and configuration management can get complex.\n\n\nRobustness & Reliability\nDesigned for 24/7 operation in industrial environments with high noise, vibration, and temperature.\nHigher cost compared to microcontrollers or simple relays.\n\n\nI/O Flexibility\nSupports both digital and analog inputs/outputs; also high-speed counters, motion modules, etc.\nWiring effort, calibration, and complexity with fast I/O.\n\n\nCommunication Protocols\nModern PLCs support Ethernet/IP, Profinet, Profibus, Modbus, OPC UA, etc. → critical for integration with SCADA/HMI/Cloud.\nVendor lock-in and protocol compatibility issues can occur.\n\n\nProgramming Languages\nIEC 61131-3 languages (Ladder Logic, Function Block Diagram, Structured Text, SFC, Instruction List).\nSteep learning curve; different languages better for different tasks.\n\n\nDiagnostics & Monitoring\nSelf-diagnostics, error codes, communication monitoring, module failure alerts → reduces downtime.\nRequires proper configuration; debugging distributed systems is complex.\n\n\nSafety Features\nSafety PLCs include safe I/O modules, emergency stop functions, redundancy, watchdog timers.\nCertification and compliance can increase project cost.\n\n\nReal-time Performance\nDeterministic scan cycles (ms or µs range) required for process & motion control.\nMore complex programs can slow scan times; synchronization becomes critical.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#hardware-components-of-a-plc",
    "href": "chapter03.html#hardware-components-of-a-plc",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.2 Hardware Components of a PLC",
    "text": "5.2 Hardware Components of a PLC\nA PLC consists of several key components: 1. CPU (Central Processing Unit): Executes control logic based on input signals. 2. Power Supply Unit: Converts AC voltage to DC to power the CPU and I/O modules. 3. Programming Device: A computer or dedicated device used to write and monitor programs. 4. Memory Unit: Stores user programs and operational data. 5. Input/Output (I/O) Modules: Interfaces between the PLC and external devices.\n\n5.2.1 Types of PLCs\n\nCompact PLC: A single unit containing all essential components.\nModular PLC: Allows separate modules for power, processing, and I/O, providing flexibility.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#plc-scan-cycle",
    "href": "chapter03.html#plc-scan-cycle",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.3 PLC Scan Cycle",
    "text": "5.3 PLC Scan Cycle\nA PLC operates in a repetitive cycle: 1. Input Scan: Reads the status of input devices. 2. Program Execution: Processes logic based on the input conditions. 3. Output Scan: Updates the status of output devices. 4. Housekeeping: Manages internal operations such as diagnostics and communication.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#programming-a-plc",
    "href": "chapter03.html#programming-a-plc",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.4 Programming a PLC",
    "text": "5.4 Programming a PLC\n\n5.4.1 Programming Languages\n\nMachine Code\nAssembly Language\nHigh-Level Languages (C, Pascal, BASIC)\nLadder Logic (Most Common)\n\n\n\n5.4.2 Ladder Logic\n\nVertical rails: Represent the power supply.\nHorizontal rungs: Define logical operations.\nContacts and coils: Represent input conditions and outputs.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#logical-operations-with-ladder-diagram",
    "href": "chapter03.html#logical-operations-with-ladder-diagram",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.5 Logical Operations with Ladder Diagram",
    "text": "5.5 Logical Operations with Ladder Diagram\nGRAFCET (Graphical Functional Control Step Transition) is a graphical tool for modeling deterministic control behavior. It describes process evolution, indicating required actions and triggering information.\n\n5.5.1 Elements of GRAFCET\n\nStages: Define specific process steps.\nTransitions: Determine movement conditions between stages.\nLinks: Connect different process elements.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#timers-and-counters-in-plcs",
    "href": "chapter03.html#timers-and-counters-in-plcs",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.6 Timers and Counters in PLCs",
    "text": "5.6 Timers and Counters in PLCs\n\n5.6.1 Timer Functions\n\nOn-Delay Timer (TON): Delays activation after an input signal.\nOff-Delay Timer (TOF): Delays deactivation after an input signal.\nRetentive Timer (RTO): Holds accumulated time value.\n\n\n\n\n5.6.2 Counter Functions\n\nUp-Counter (CTU): Increments when an event occurs.\nDown-Counter (CTD): Decrements when an event occurs.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#latch-and-unlatch-instructions",
    "href": "chapter03.html#latch-and-unlatch-instructions",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.7 Latch and Unlatch Instructions",
    "text": "5.7 Latch and Unlatch Instructions\nLatch (Set) and Unlatch (Reset) instructions are used to maintain a state in a PLC.\n\nLatch (Set): When activated, the output remains ON until an Unlatch is triggered.\nUnlatch (Reset): Turns off the latched output.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#sequencers-in-plcs",
    "href": "chapter03.html#sequencers-in-plcs",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.8 Sequencers in PLCs",
    "text": "5.8 Sequencers in PLCs\nSequencers allow executing predefined step-based operations. Each step triggers an output sequence, commonly used in manufacturing processes.\n\nStep-Based Execution\nMemory Storage for Steps\nTiming Control for Sequential Execution",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#subroutines-in-plcs",
    "href": "chapter03.html#subroutines-in-plcs",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.9 Subroutines in PLCs",
    "text": "5.9 Subroutines in PLCs\nSubroutines allow modular programming by dividing a large program into smaller, reusable blocks.\n\nEfficiency Improvement\nCode Reusability\nSimplified Debugging",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#rslogix-and-plc-programming-software",
    "href": "chapter03.html#rslogix-and-plc-programming-software",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.10 RSLogix and PLC Programming Software",
    "text": "5.10 RSLogix and PLC Programming Software\n\n5.10.1 Software Tools for PLC Programming\n\nRSLinx: Manages communication between a PLC and a PC.\nRSLogix 500: Software for editing, verifying, and simulating PLC programs.\nRSLogix Emulate 500: Allows for program testing without a physical PLC.\n\nGetting Started with RSLinx\n\nRun RSLinx.\nMenu:\nCommunications &gt; Configure drivers.\nIn Available Driver Types:\nSLC 500 (DH485) Emulator Driver.\nClick on Add and leave the default name.\nStation Number: 00\nClick OK.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#example-programs-in-ladder-logic",
    "href": "chapter03.html#example-programs-in-ladder-logic",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.11 Example Programs in Ladder Logic",
    "text": "5.11 Example Programs in Ladder Logic\n\n5.11.1 Example 1: Simple Ladder Logic Program\n\nObjective: Implement an AND gate logic using ladder diagram.\nInputs: Two push buttons (X1, X2)\nOutput: A lamp (Y1) that turns on when both buttons are pressed.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#troubleshooting-and-debugging-in-plcs",
    "href": "chapter03.html#troubleshooting-and-debugging-in-plcs",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.12 Troubleshooting and Debugging in PLCs",
    "text": "5.12 Troubleshooting and Debugging in PLCs\n\n5.12.1 Common Errors\n\nIncorrect transition conditions: Leads to improper process evolution.\nSimultaneous sequence start/end issues.\nNested simultaneous sequences causing execution conflicts.\nSkipping intermediate stages unintentionally.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter03.html#conclusion",
    "href": "chapter03.html#conclusion",
    "title": "5  Programmable Logic Control (PLC)",
    "section": "5.13 Conclusion",
    "text": "5.13 Conclusion\nPLCs are essential in industrial automation, offering robustness, flexibility, and efficiency in process control. By mastering programming techniques and logical operations, engineers can optimize automation systems and improve productivity.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Programmable Logic Control (PLC)</span>"
    ]
  },
  {
    "objectID": "chapter04.html",
    "href": "chapter04.html",
    "title": "6  GRAFCET - Funcional Graph of Stage-Transition Control",
    "section": "",
    "text": "6.1 Stages and transition conditions",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GRAFCET - Funcional Graph of Stage-Transition Control</span>"
    ]
  },
  {
    "objectID": "chapter04.html#rules-to-develop-a-grafcet",
    "href": "chapter04.html#rules-to-develop-a-grafcet",
    "title": "6  GRAFCET - Funcional Graph of Stage-Transition Control",
    "section": "6.2 Rules to develop a GRAFCET",
    "text": "6.2 Rules to develop a GRAFCET",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GRAFCET - Funcional Graph of Stage-Transition Control</span>"
    ]
  },
  {
    "objectID": "chapter04.html#transformation-of-a-grafcet-into-a-ladder-diagram-language-ladder",
    "href": "chapter04.html#transformation-of-a-grafcet-into-a-ladder-diagram-language-ladder",
    "title": "6  GRAFCET - Funcional Graph of Stage-Transition Control",
    "section": "6.3 Transformation of a GRAFCET into a ladder diagram language Ladder",
    "text": "6.3 Transformation of a GRAFCET into a ladder diagram language Ladder",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>GRAFCET - Funcional Graph of Stage-Transition Control</span>"
    ]
  },
  {
    "objectID": "chapter05.html",
    "href": "chapter05.html",
    "title": "7  State flow",
    "section": "",
    "text": "7.1 Introduction to state flow in Matlab",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>State flow</span>"
    ]
  },
  {
    "objectID": "chapter05.html#states-and-transitions",
    "href": "chapter05.html#states-and-transitions",
    "title": "7  State flow",
    "section": "7.2 States and transitions",
    "text": "7.2 States and transitions",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>State flow</span>"
    ]
  },
  {
    "objectID": "chapter05.html#control-a-simulation-enviroment-with-state-flow",
    "href": "chapter05.html#control-a-simulation-enviroment-with-state-flow",
    "title": "7  State flow",
    "section": "7.3 Control a simulation enviroment with state flow",
    "text": "7.3 Control a simulation enviroment with state flow",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>State flow</span>"
    ]
  },
  {
    "objectID": "chapter05.html#control-a-plant-with-state-flow",
    "href": "chapter05.html#control-a-plant-with-state-flow",
    "title": "7  State flow",
    "section": "7.4 Control a plant with state flow",
    "text": "7.4 Control a plant with state flow",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>State flow</span>"
    ]
  },
  {
    "objectID": "chapter06.html",
    "href": "chapter06.html",
    "title": "8  Industrial Robots",
    "section": "",
    "text": "8.1 1. Introduction\nThe kinematic analysis of a robot is performed using the Denavit-Hartenberg convention. This method is essential for describing the transformations of the joints and links of an industrial robot. In this material, we discuss how the coordinate system is defined for each joint and how transformations are applied to calculate the position of the TCP (Tool Center Point).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#coordinate-systems",
    "href": "chapter06.html#coordinate-systems",
    "title": "8  Industrial Robots",
    "section": "8.2 2. Coordinate Systems",
    "text": "8.2 2. Coordinate Systems\n\nBase Coordinate System\nImage: insert image of the base coordinate system setup for the robot\nJoint Coordinate System\nImage: insert image of the joint coordinate system for the robot\nCartesian Coordinate System\nImage: insert image of the Cartesian coordinate system used in the robot",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#forward-and-inverse-kinematics",
    "href": "chapter06.html#forward-and-inverse-kinematics",
    "title": "8  Industrial Robots",
    "section": "8.3 3. Forward and Inverse Kinematics",
    "text": "8.3 3. Forward and Inverse Kinematics\nForward kinematics describes how the position and orientation of the TCP depend on the joint variables (angles and displacements). On the other hand, inverse kinematics involves calculating the joint angles from a desired TCP position.\nImage: insert image showing the forward kinematics and inverse kinematics process",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#homogeneous-transformations",
    "href": "chapter06.html#homogeneous-transformations",
    "title": "8  Industrial Robots",
    "section": "8.4 4. Homogeneous Transformations",
    "text": "8.4 4. Homogeneous Transformations\nHomogeneous transformations are used to describe the position and orientation of links in three-dimensional space using 4x4 matrices. Below are examples of transformations.\n\n8.4.1 Displacement and Rotation\nImage: insert image of homogeneous transformation matrix for displacement and rotation",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#denavit-hartenberg-parameters",
    "href": "chapter06.html#denavit-hartenberg-parameters",
    "title": "8  Industrial Robots",
    "section": "8.5 5. Denavit-Hartenberg Parameters",
    "text": "8.5 5. Denavit-Hartenberg Parameters\nThe Denavit-Hartenberg parameterization uses four parameters to describe each link of the robot:\n1. ( n ) - Angle between the axes ( x{n-1} ) and ( x_n ), rotated about ( z_{n-1} ). 2. ( d_n ) - Distance between the origins ( O_n ) and ( O_{n-1} ) along the ( z_{n-1} ) axis. 3. ( a_n ) - Perpendicular distance between the ( z_{n-1} ) and ( z_n ) axes. 4. ( n ) - Angle between the ( z{n-1} ) and ( z_n ) axes, rotated about ( x_n ).\nImage: insert image of Denavit-Hartenberg parameters with graphical representation of the robot’s joints",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#mathematical-model-of-a-6-dof-robot",
    "href": "chapter06.html#mathematical-model-of-a-6-dof-robot",
    "title": "8  Industrial Robots",
    "section": "8.6 6. Mathematical Model of a 6-DOF Robot",
    "text": "8.6 6. Mathematical Model of a 6-DOF Robot\nThe model of a 6-degree-of-freedom robot is described by the transformations of each link, applying the Denavit-Hartenberg parameters to obtain the TCP position in the global coordinate system.\nImage: insert image showing the transformation of the 6-DOF robot with all links and joints represented",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#inverse-kinematics-ambiguities",
    "href": "chapter06.html#inverse-kinematics-ambiguities",
    "title": "8  Industrial Robots",
    "section": "8.7 7. Inverse Kinematics Ambiguities",
    "text": "8.7 7. Inverse Kinematics Ambiguities\nWhen solving inverse kinematics, multiple solutions for the joint angles can arise. These ambiguities occur because the positions of the higher axes depend on the positions of the lower axes. Approximation procedures exist for conventional robots.\nImage: insert image showing inverse kinematics ambiguities and multiple solutions",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#denavit-hartenberg-transformation-exercise",
    "href": "chapter06.html#denavit-hartenberg-transformation-exercise",
    "title": "8  Industrial Robots",
    "section": "8.8 8. Denavit-Hartenberg Transformation Exercise",
    "text": "8.8 8. Denavit-Hartenberg Transformation Exercise\nAn exercise is presented to calculate the Denavit-Hartenberg transformation for a 6-DOF robot.\nImage: insert image showing the Denavit-Hartenberg transformation calculation steps for a 6-DOF robot",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#conclusion",
    "href": "chapter06.html#conclusion",
    "title": "8  Industrial Robots",
    "section": "8.9 9. Conclusion",
    "text": "8.9 9. Conclusion\nKinematic analysis is essential for robot control and simulation. Using the Denavit-Hartenberg model, the position and orientation of the TCP can be efficiently calculated. Additionally, inverse kinematics is crucial for determining the joint angles in practical applications.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  },
  {
    "objectID": "chapter06.html#references",
    "href": "chapter06.html#references",
    "title": "8  Industrial Robots",
    "section": "8.10 References",
    "text": "8.10 References\n\nCorke, Peter. “Robotics, Vision and Control”.\n\nKUKA Robotics.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Industrial Robots</span>"
    ]
  }
]